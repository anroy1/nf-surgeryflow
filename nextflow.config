params.input      = false
params.output     = 'output'

docker.enabled    = true
docker.runOptions = '-u $(id -u):$(id -g)'

//**Surgeryflow parameters**//
params.run_synthbet                                    = true
params.run_synthseg                                    = true
params.run_synthmorph                                  = true

// Global default params, used in configs
params {
    input = false
    outdir = 'result_surgery'
    run_denoising = true
    run_eddy = true
    run_n4 = true
    lean_output = true
}

process {

 /* SUBWORKFLOWS CONFIGURATION */

    withName: "PREPROC_DWI:DENOISE_DWI" {
        ext.extent = 7
    }

    withName: "PREPROC_DWI:UTILS_EXTRACTB0" {
        ext.b0_extraction_strategy = "mean"
    }

    withName: "PREPROC_DWI:TOPUP_EDDY:PREPROC_TOPUP" {
        ext.prefix_topup            = "topup_results"
        ext.default_config_topup    = "b02b0.cnf"
        ext.encoding                = "y"  //FIXME
        ext.readout                 = 0.062 //FIXME
        ext.b0_thr_extract_b0       = 10
    }

    withName: "PREPROC_DWI:TOPUP_EDDY:PREPROC_EDDY" {
        ext.prefix_topup                            = "topup_results"
        ext.slice_drop_flag                         = true
        ext.bet_topup_before_eddy_f                 = 0.16
        ext.eddy_cmd                                = "eddy_cpu"
        ext.dilate_b0_mask_prelim_brain_extraction  = 5
        ext.bet_prelim_f                            = 0.16
        ext.b0_thr_extract_b0                       = 10
        ext.encoding                                = "y"  //FIXME
        ext.readout                                 = 0.062 //FIXME
    }

    withName: "PREPROC_DWI:TOPUP_EDDY:UTILS_EXTRACTB0" {
        ext.b0_extraction_strategy = "mean"
    }


    withName: "PREPROC_DWI:BETCROP_FSLBETCROP" {
        ext.bet_f   = 0.16
        ext.b0_thr  = 10
        ext.crop    = true
        ext.dilate  = false
    }

    withName: "PREPROC_DWI:N4_DWI" {
        ext.bspline_knot_per_voxel = 0.25
        ext.shrink_factor          = 4
    }

    withName: "PREPROC_DWI:RESAMPLE_DWI" {
        ext.voxel_size      = 1
        ext.interp          = "lin"
        ext.first_suffix    = "dwi"
    }

    withName: "PREPROC_DWI:BETCROP_CROPVOLUME" {
        ext.output_bbox     = false
    }

    withName: "PREPROC_DWI:RESAMPLE_MASK" {
        ext.voxel_size      = 1
        ext.interp          = "nn"
        ext.first_suffix    = "mask"
    }

    withName: "PREPROC_T1:BETCROP_CROPVOLUME" {
        ext.output_bbox     = true
        ext.first_suffix    = "t1"
    }

    withName: "PREPROC_T1:BETCROP_CROPVOLUME_MASK" {
        ext.output_bbox     = false
        ext.first_suffix    = "t1_mask"
    }

    withName: "PREPROC_T1:BETCROP_SYNTHBET_T1" {
        ext.nocsf = true
    }

    withName: "PREPROC_T1:IMAGE_RESAMPLE" {
        ext.voxel_size      = 1
        ext.interp          = "lin"
        ext.first_suffix    = "t1"
    }

    withName: "T1_REGISTRATION:REGISTRATION_SYNTHREGISTRATION" {
        ext.lambda           = 0.5
    }

    //withName: ":REGISTRATION_CONVERT" {
        // Nothing to do !
    //}

    //withName: "T1_REGISTRATION:REGISTER_ANATTODWI" {
        // Nothing to do !
    //}

    //withName: "ANATOMICAL_SEGMENTATION:SEGMENTATION_FASTSEG" {
        // Nothing to do !
    //}

    //withName: "ANATOMICAL_SEGMENTATION:SEGMENTATION_FREESURFERSEG" {
        // Nothing to do !
    //}

    withName: "ANATOMICAL_SEGMENTATION:SEGMENTATION_SYNTHSEG" {
        ext.fast = true
    }

    /* MODULES CONFIGURATION */

    //TODO: Probably to delete. Feed fa from DTIMETRICS instead

    // withName: "REGISTRATION_FA" {
    //     ext.fa          = true
    //     ext.ad          = false
    //     ext.evecs       = false
    //     ext.evals       = false
    //     ext.ga          = false
    //     ext.rgb         = false
    //     ext.md          = false
    //     ext.mode        = false
    //     ext.norm        = false
    //     ext.rd          = false
    //     ext.tensor      = false
    //     ext.nonphysical = false
    //     ext.pulsation   = false
    //     ext.residual    = false
    // }

    // withName: "TRANSFORM_WMPARC" {
    //     ext.dimensionality  = 3
    //     ext.image_type      = 0
    //     ext.interpolation   = "NearestNeighbor"
    //     ext.output_dtype    = "uchar"
    //     ext.default_val     = 0
    // }

    // withName: "TRANSFORM_APARC_ASEG" {
    //     ext.dimensionality  = 3
    //     ext.image_type      = 0
    //     ext.interpolation   = "MultiLabel"
    //     ext.output_dtype    = "short"
    //     ext.default_val     = 0
    // }

    withName: "RECONST_FRF" {
        ext.fa          = 0.7
        ext.fa_min      = 0.5
        ext.nvox_min    = 300
        ext.roi_radius  = 20
        ext.set_frf     = null ? true : false
        ext.manual_frf  = null
    }

    //withName: "RECONST_MEANFRF" {
        // Nothing to do !
    //}

    withName: "RECONST_DTIMETRICS" {
        ext.ad          = true
        ext.evecs       = true
        ext.evals       = true
        ext.fa          = true
        ext.ga          = true
        ext.rgb         = true
        ext.md          = true
        ext.mode        = true
        ext.norm        = true
        ext.rd          = true
        ext.tensor      = true
        ext.nonphysical = true
        ext.pulsation   = true
        ext.residual    = true
    }

    withName: "RECONST_FODF" {
        ext.b0_thr_extract_b0       = 10
        ext.dwi_shell_tolerance     = 20
        ext.min_fodf_shell_value    = 700
        ext.fodf_shells             = null
        ext.sh_order                = 8
        ext.sh_basis                = "descoteaux07"
        ext.fa_threshold            = 0.1
        ext.md_threshold            = 0.003
        ext.relative_threshold      = 0.1
        ext.fodf_metrics_a_factor   = 2.0
        ext.absolute_peaks          = true  //FIXME
        ext.processes               = 4     //FIXME
        ext.peaks                   = true
        ext.peak_indices            = true
        ext.afd_max                 = true
        ext.afd_total               = true
        ext.afd_sum                 = true
        ext.nufo                    = true
    }

    withName: "TRACKING_PFTTRACKING" {
        ext.when                            = false
        ext.pft_seeding_mask_type           = "wm"
        ext.pft_fa_seeding_mask_threshold   = 0.1
        ext.pft_seeding                     = "npv"
        ext.pft_nbr_seeds                   = 10
        ext.pft_algo                        = "prob"
        ext.pft_step                        = 0.5
        ext.pft_theta                       = 20
        ext.pft_sfthres                     = 0.1
        ext.pft_sfthres_init                = 0.5
        ext.pft_min_len                     = 20
        ext.pft_max_len                     = 200
        ext.pft_particles                   = 15
        ext.pft_back                        = 2
        ext.pft_front                       = 1
        ext.pft_random_seed                 = 0
        ext.pft_compress_streamlines        = true
        ext.pft_compress_value              = 0.2
        ext.basis                           = "descoteaux07"
    }

    withName: "TRACKING_LOCALTRACKING" {
        ext.when                                = true
        ext.local_tracking_mask_type            = "fa"
        ext.local_fa_tracking_mask_threshold    = 0.1
        ext.local_seeding_mask_type             = "fa"
        ext.local_fa_seeding_mask_threshold     = 0.1
        ext.local_seeding                       = "npv"
        ext.local_nbr_seeds                     = 5
        ext.local_algo                          = "prob"
        ext.local_step                          = 0.5
        ext.local_theta                         = 20
        ext.local_sfthres                       = 0.1
        ext.local_min_len                       = 20
        ext.local_max_len                       = 200
        ext.local_random_seed                   = 0
        ext.local_compress_streamlines          = true
        ext.local_compress_value                = 0.2
        ext.basis                               = "descoteaux07"
    }

    withName: "BUNDLE_SEG:REGISTRATION_ANTS"{
        ext.quick                               = true
        ext.random_seed                         = 50
        ext.repro_mode                          = 1
        ext.transform                           = "r"
    }

    withName: "BUNDLE_SEG:BUNDLE_RECOGNIZE"{
        ext.minimal_vote_ratio                  = 0.1
        ext.seed                                = 0
        ext.rbx_processes                       = 4
        ext.outlier_alpha                       = 0.5
    }
}