process {
    publishDir = { "${params.outdir}/$meta.id/${task.process.replaceAll(':', '-')}" }
}

// Global default params, used in configs
params {
    input                                       = false
    outdir                                      = 'results'
    lean_output                                 = false
    publish_dir_mode                            = 'copy'

    //** T1 Preprocessing options **//
    // Setting steps to perform
    preproc_t1_run_denoising                   = true
    preproc_t1_run_N4                          = true
    preproc_t1_run_resampling                  = true
    preproc_t1_run_synthbet                    = true
    preproc_t1_run_ants_bet                    = false
    preproc_t1_run_crop                        = true

    // Denoising
    t1_denoise_number_of_coils                 = 1

    // N4
    t1_bias_bspline_knot_per_voxel          = 1
    t1_bias_shrink_factor                   = 1

    // Resample
    t1_resample_voxel_size                  = 1
    t1_resample_interp                      = "lin"
    t1_resample_first_suffix                = "t1"

    // Crop T1
    t1_crop_output_bbox                    = true
    t1_crop_first_suffix                   = "t1"

    // Crop mask
    t1_crop_mask_output_bbox               = false
    t1_crop_mask_first_suffix              = "t1_mask"

    // Brain extraction
    // Synthstrip
    t1_synthstrip_border                    = 1
    t1_synthstrip_nocsf                     = true
    t1_synthstrip_weights                   = null
    t1_synthstrip_enable_gpu                = false

    // Tissue segmentation
    t1_synthseg_run_fast                        = true
    t1_synthseg_enable_gpu                      = false

    // DWI Preprocessing options **//
    // Setting steps to perform
    preproc_dwi_run_denoising                  = true   
    preproc_dwi_run_degibbs                    = true
    preproc_dwi_run_N4                         = true   
    preproc_dwi_run_resampling                 = true

    // Denoising 
    dwi_denoise_patch_size                      = 7

    // Extract B0
    dwi_extract_b0_threshold                    = 10

    // Topup
    topup_eddy_run_topup                    = true
    dwi_susceptibility_config_file          = "b02b0.cnf"
    dwi_susceptibility_output_prefix        = "topup_results"
    dwi_susceptibility_readout              = 0.040
    dwi_susceptibility_b0_threshold         = 10
    dwi_susceptibility_encoding_dir         = "y"

    // Eddy
    topup_eddy_run_eddy                     = true
    dwi_motion_and_eddy_command             = "eddy_cpu"
    dwi_motion_and_eddy_bet_f_threshold     = 0.16
    dwi_motion_and_eddy_restore_slices      = true
    dwi_motion_and_eddy_b0_mask_bet         = 5
    dwi_motion_and_eddy_b0_extract_strategy = "mean"

    // FSL bet
    dwi_bet_f_threshold                     = 0.16
    dwi_bet_b0_threshold                    = 10
    dwi_bet_crop                            = true
    dwi_bet_dilate                          = false

    // N4
    dwi_bias_bspline_knot_per_voxel         = 0.25
    dwi_bias_shrink_factor                  = 4

    // Normalize
    dwi_normalize_fa_mask_threshold         = 0.4
    dwi_normalize_shell_tolerance           = 50

    // Resample DWI
    dwi_resample_voxel_size                 = 1
    dwi_resample_interp                     = "lin"

    // Crop DWI
    dwi_crop_output_bbox                   = false
    dwi_crop_first_suffix                  = "b0"

    // Resample mask
    dwi_resample_mask_voxel_size            = 1
    dwi_resample_mask_interp                = "nn"
    dwi_resample_first_suffix               = "mask"

    //** Reconstruction options **//
    // DTI Metrics //FIXME: add metrics optionnality
    dti_shell_tolerance                     = 50
    dti_max_shell_value                     = 1500
    dti_b0_threshold                        = 20
    dti_shells                              = null

    // FRF
    run_mean_frf                               = false
    frf_fa                                  = 0.7
    frf_min_fa                              = 0.5
    frf_nvox_min                            = 300
    frf_roi_radius                          = 20
    frf_dwi_shell_tolerance                 = 50
    frf_max_dti_shell_value                 = 1500
    frf_min_fodf_shell_value                = 100
    frf_b0_threshold                        = 20
    frf_set_method                          = "ssst"
    frf_set_frf                             = null ? true : false
    frf_manual_frf                          = "15,4,4"

    // FODF Metrics //FIXME: add metrics optionnality
    fodf_shell_tolerance                    = 20
    fodf_min_fodf_shell_value               = 700
    fodf_shells                             = null
    fodf_b0_threshold                       = 10
    fodf_sh_order                           = 8
    fodf_sh_basis                           = "descoteaux07"
    fodf_set_method                         = "ssst"
    fodf_relative_threshold                 = 0.1
    fodf_a_factor                           = 2.0
    fodf_max_fa_threshold                   = 0.1
    fodf_min_md_threshold                   = 0.003
    fodf_absolute_peaks                     = false

    // ** Registration options ** //
    // Synthregistration
    run_synthmorph                          = true
    synthreg_lambda                         = 0.5
    synthreg_enable_gpu                     = false

    // ** Tracking options ** //
    // PFT Tracking //FIXME
    run_pft                                 = false
    pft_fa_threshold                        = 0.2
    pft_seeding_mask_type                   = "wm"
    pft_random_seed                         = 1234
    pft_compress                            = true
    pft_compress_value                      = 0.2
    pft_algo                                = "prob"
    pft_nbr_seeds                           = 10
    pft_seeding_type                        = "npv"
    pft_step                                = 0.5
    pft_theta                               = 20
    pft_sfthres                             = 0.1
    pft_sfthres_init                        = 0.5
    pft_min_len                             = 20
    pft_max_len                             = 200
    pft_particles                           = 15
    pft_back                                = 2
    pft_front                               = 1
    pft_sh_basis                            = "descoteaux07"

    // Local Tracking
    run_local_tracking                      = true
    local_fa_tracking_mask_threshold        = 0.1
    local_fa_seeding_mask_threshold         = 0.1
    local_seeding_mask_type                 = "fa"
    local_tracking_mask_type                = "fa"
    local_random_seed                       = 0
    local_compress                          = true
    local_compress_value                    = 0.2
    local_algo                              = "prob"
    local_nbr_seeds                         = 5
    local_seeding_type                      = "npv"
    local_step                              = 0.5
    local_theta                             = 20
    local_sfthres                           = 0.1
    local_min_len                           = 20
    local_max_len                           = 200
    local_sh_basis                          = "descoteaux07"

    // GPU tracking
    local_gpu_batch_size                    = 50000
    local_enable_gpu                        = false

    //** BundleSeg options **//
    // Registration
    bundleseg_registration_quick            = true
    bundleseg_registration_random_seed      = 50
    bundleseg_registration_repro_mode       = 1
    bundleseg_registration_transform        = "a"

    // Recognize
    bundleseg_recognize_minimal_vote_ratio  = 0.1
    bundleseg_recognize_seed                = 0
    bundleseg_recognize_rbx_processes       = 4
    bundleseg_recognize_outlier_alpha       = 0.5

    // tractogram
    bundleseg_register_suffix               = "mni"
    bundleseg_register_inverse              = false
    bundleseg_register_reverse_operation    = false

    //** Atlas directory **//
    atlas_directory                           = null

    //** DICOM to NIfTI options **//
    run_nii_to_dicom                           = false
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    standard {//FIXME: improve profile
        //** Local tracking **//
        params.run_local_tracking               = true
        params.local_nbr_seeds                  = 5
        params.local_tracking_mask_type         = "fa"
        params.local_seeding_mask_type          = "fa"
        params.local_fa_seeding_mask_threshold  = 0.1
        params.local_fa_tracking_mask_threshold = 0.1
        
        //** Synthbet options **//
        params.run_synthbet                     = true
        params.synthbet_nocsf                   = true

        //** Registration options **//
        params.run_synthmorph                   = true

        //** Segmentation options **//
        params.run_synthseg                     = true

        //**PFT tracking**//
        params.run_pft_tracking                 = false
    }
    tumour {//FIXME: improve profile
        //** Local tracking **//
        params.run_local_tracking               = true
        
        //** Synthbet options **//
        params.run_synthbet                     = true
        params.synthbet_nocsf                   = false

        //** Registration options **//
        params.run_synthmorph                   = true

        //** Segmentation options **//
        params.run_synthseg                     = true

        //** PFT tracking **//
        params.run_pft_tracking                 = false
    }
    mni {
        params.bundles_mni = true   
    }
    use_gpu   { //FIXME
        singularity.runOptions                  = '--nv'
        apptainer.runOptions                    = '--nv'
        docker.runOptions                       = '--gpus all'
        params.dwi_motion_and_eddy_command      = "eddy_cuda10.2"

        //** Local tracking **//
        params.run_local_tracking               = true
        params.local_enable_gpu                 = true
        params.local_algo                       = "prob"
        params.local_gpu_batch_size             = 50000

        // //** Synthregistration **//
        // params.run_synthmorph                   = true
        // params.synthreg_enable_gpu              = true

        // //** Synthbet **// //FIXME: module container
        // params.run_synthbet                     = true
        // params.synthbet_enable_gpu             = true

        // //** Synthseg **// //FIXME: gpu not yet implemented in module
        // params.run_synthseg                     = true
        // params.synthseg_enable_gpu              = true

    }
    dicom { //FIXME
        params.run_nii_to_dicom                 = true
    }
    fully_reproducible { //FIXME
        params.processes_brain_extraction_t1    = 1
        params.processes_denoise_dwi            = 4
        params.processes_denoise_t1             = 4
        params.processes_eddy                   = 1
        params.processes_fodf                   = 4
        params.processes_registration           = 1
        params.processes_local_tracking         = 1
    }
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        conda.channels          = ['conda-forge', 'bioconda']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
        docker.runOptions       = "--user root"

        executor.name           = "local"
        executor.cpus           = 20
        executor.memory         = 24.GB
    }
    arm {
        docker.runOptions       = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
        conda.enabled           = false
        docker.enabled          = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    podman {
        podman.enabled          = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    shifter {
        shifter.enabled         = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    charliecloud {
        charliecloud.enabled    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        apptainer.enabled       = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.runOptions    = '--writable-tmpfs'
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    gitpod {
        executor.name           = 'local'
        executor.cpus           = 4
        executor.memory         = 8.GB
        process {
            resourceLimits = [
                memory: 8.GB,
                cpus  : 4,
                time  : 1.h
            ]
        }
    }
    test      { includeConfig 'conf/test.config'      }
    test_full { includeConfig 'conf/test_full.config' }
    no_symlink {
        params.publish_dir_mode = 'copy'
    }
    slurm {
        process {
            maxRetries          = 1
            cache               = "lenient"
            afterScript         = "sleep 60"
        }

        executor {
            name                = 'slurm'
            queueSize           = 1000
            queueGlobalStatus   = false
            perCpuMemAllocation = true
            queueStatInterval   = '3 min'
            submitRateLimit     = '10/1sec'
            exitReadTimeout     = '30 min'
            pollInterval        = '30 sec'
            jobName             = {
                task.name
                    .replace("[", "(")
                    .replace("]", ")")
                    .replace(" ", "_")
            }
        }
    }
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

manifest {
    name            = 'anroy261/nf-surgeryflow'
    contributors    = [
        [
            name: 'Antoine Royer',
            affiliation: 'Université de Sherbrooke',
            email: 'roya2118@usherbrooke.ca',
            github: '@anroy261',
            contribution: ['author', 'maintainer'],
            orcid: 'https://orcid.org/' // List of contribution types ('author', 'maintainer' or 'contributor')
        ],
    ]

    homePage        = 'https://github.com/anroy261/nf-surgeryflow'
    description     = """NF-SurgeryFlow is a Nextflow pipeline for processing neuroimaging data"""
    mainScript      = 'main.nf'
    defaultBranch   = 'main'
    nextflowVersion = '!>=24.04.4'
    version         = ''
    doi             = ''
}