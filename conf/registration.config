/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {
    withName: "T1_REGISTRATION:REGISTRATION_SYNTHREGISTRATION" {
        cpus                 = 20
        memory               = 24.GB
        time                 = 1.h
        ext.lambda           = 0.5
        ext.gpu              = params.synthreg_enable_gpu
        publishDir = [
            path: { meta.session ? "${params.outdir}/${meta.id}/${meta.session}/ANAT/" : "${params.outdir}/${meta.id}/ANAT/REGISTRATION" },
            mode: params.publish_dir_mode,
            saveAs: {
                filename ->
                def ses = meta.session ? "${meta.session}_" : ""
                if ( filename.contains("_warped_image.nii.gz") ) { "${meta.id}_${ses}space-DWI_desc-preproc_T1w.nii.gz" }
                else if ( filename.contains("versions.yml") ) { null }
                else { params.lean_output ? null : filename }
            }
        ]
    }

    withName: "REGISTRATION_CONVERT" { //FIXME
        ext.in_format_affine = "lta"
        ext.out_format_affine = "itk"
        ext.in_format_deform = "ras"
        ext.out_format_deform = "itk"
        publishDir = [
            path: { meta.session ? "${params.outdir}/${meta.id}/${meta.session}/ANAT/" : "${params.outdir}/${meta.id}/ANAT/REGISTRATION" },
            mode: params.publish_dir_mode,
            saveAs: {
                filename ->
                def ses = meta.session ? "${meta.session}_" : ""
                if ( filename.contains("deform_warp") ) { "${meta.id}_${ses}" + ${filename} }
                else if ( filename.contains("affine_warp") ) { "${meta.id}_${ses}" + ${filename} }
                else if ( filename.contains("versions.yml") ) { null }
                else { params.lean_output ? null : filename }
            }
        ]
    }

    //withName: "T1_REGISTRATION:REGISTER_ANATTODWI" {
        // Nothing to do !
    //}
}