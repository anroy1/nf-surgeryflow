/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {
    withName: "PREPROC_T1:DENOISING_NLMEANS" {
        ext.ncoils     = params.t1_denoise_number_of_coils
        publishDir = [
            path: { meta.session ? "${params.outdir}/${meta.id}/${meta.session}/ANAT/" : "${params.outdir}/${meta.id}/ANAT/DENOISING" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.lean_output ? false : true
        ]
    }

    withName: "PREPROC_T1:PREPROC_N4" {
        ext.bspline_knot_per_voxel     = params.t1_bias_bspline_knot_per_voxel
        ext.shrink_factor              = params.t1_bias_shrink_factor
        publishDir = [
            path: { meta.session ? "${params.outdir}/${meta.id}/${meta.session}/ANAT/" : "${params.outdir}/${meta.id}/ANAT/N4" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.lean_output ? false : true
        ]
    }

    withName: "PREPROC_T1:IMAGE_RESAMPLE" {
        ext.voxel_size      = params.t1_resample_voxel_size
        ext.interp          = params.t1_resample_interp
        ext.first_suffix    = params.t1_resample_first_suffix
        publishDir = [
            path: { meta.session ? "${params.outdir}/${meta.id}/${meta.session}/ANAT/" : "${params.outdir}/${meta.id}/ANAT/RESAMPLE" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.lean_output ? false : true
        ]
    }

    withName: "PREPROC_T1:IMAGE_CROPVOLUME_T1" {
        ext.output_bbox     = params.t1_crop_output_bbox
        ext.first_suffix    = params.t1_crop_first_suffix
        publishDir = [
            path: { meta.session ? "${params.outdir}/${meta.id}/${meta.session}/ANAT/BETCROP" : "${params.outdir}/${meta.id}/ANAT/BETCROP" },
            mode: params.publish_dir_mode,
            saveAs: {
                filename ->
                def ses = meta.session ? "${meta.session}_" : ""
                if ( filename.contains("_cropped.nii.gz") ) { "${meta.id}_${ses}desc-preproc_t1.nii.gz" }
                else if ( filename.contains(".pkl") ) { "${meta.id}_${ses}desc-boundingbox.pkl" }
                else if ( filename.contains("versions.yml") ) { null }
                else { params.lean_output ? null : filename }
            }
        ]
    }

    withName: "PREPROC_T1:IMAGE_CROPVOLUME_MASK" {
        ext.output_bbox     = params.t1_crop_mask_output_bbox
        ext.first_suffix    = params.t1_crop_mask_first_suffix
        publishDir = [
            path: { meta.session ? "${params.outdir}/${meta.id}/${meta.session}/ANAT/" : "${params.outdir}/${meta.id}/ANAT/BETCROP" },
            mode: params.publish_dir_mode,
            saveAs: {
                filename ->
                def ses = meta.session ? "${meta.session}_" : ""
                if ( filename.contains("_cropped.nii.gz") ) { "${meta.id}_${ses}desc-brain_mask.nii.gz" }
                else if ( filename.contains("versions.yml") ) { null }
                else { params.lean_output ? null : filename }
            }
        ]
    }

    withName: "PREPROC_T1:BETCROP_SYNTHBET" {
        memory                  = 8.GB
        ext.nocsf               = params.t1_synthstrip_nocsf
        ext.border              = params.t1_synthstrip_border
        publishDir = [
            path: { meta.session ? "${params.outdir}/${meta.id}/${meta.session}/ANAT/" : "${params.outdir}/${meta.id}/ANAT/BETCROP" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.lean_output ? false : true
        ]
    }
}