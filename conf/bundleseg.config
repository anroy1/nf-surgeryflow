/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {
    withName: "BUNDLE_SEG:REGISTRATION_ANTS"{
        ext.quick                               = params.bundleseg_registration_quick
        ext.random_seed                         = params.bundleseg_registration_random_seed
        ext.repro_mode                          = params.bundleseg_registration_repro_mode
        ext.transform                           = params.bundleseg_registration_transform
        publishDir = [
            path: { meta.session ? "${params.outdir}/${meta.id}/${meta.session}/DWI/BUNDLES" : "${params.outdir}/${meta.id}/DWI/BUNDLES/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.lean_output ? false : true
        ]
    }

    withName: "BUNDLE_SEG:BUNDLE_RECOGNIZE"{
        ext.minimal_vote_ratio                  = params.bundleseg_recognize_minimal_vote_ratio
        ext.seed                                = params.bundleseg_recognize_seed
        ext.rbx_processes                       = params.bundleseg_recognize_rbx_processes
        ext.outlier_alpha                       = params.bundleseg_recognize_outlier_alpha
        publishDir = [
            path: { meta.session ? "${params.outdir}/${meta.id}/${meta.session}/DWI/BUNDLES" : "${params.outdir}/${meta.id}/DWI/BUNDLES" },
            mode: params.publish_dir_mode,
            saveAs: {
                filename ->
                def ses = meta.session ? "${meta.session}_" : ""
                if ( filename.endsWith(".trk") ) { "${meta.id}_${ses}_${filename}" }
                else if ( filename.contains("versions.yml") ) { null }
                else { params.lean_output ? null : filename }
            }
        ]
    }
}